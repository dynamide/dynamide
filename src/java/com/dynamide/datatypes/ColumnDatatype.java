
package com.dynamide.datatypes;

//This file was generated by /dynamide/src/shell/webmacro/generate-datatype.wm

import org.jdom.Element;

import com.dynamide.DynamideObject;
import com.dynamide.JDOMFile;
import com.dynamide.Session;

/*  Implementation note:
    Sample properties element:
    <property name="publishParams">
      <datatype>com.dynamide.datatypes.PublishParamsDatatype</datatype>
      <value>
        <caption></caption>
        <captionMacro></captionMacro>
        <captionClickable></captionClickable>
        <cell></cell>
        <cellMacro></cellMacro>
        <cellClickable></cellClickable>
        <cellClickNavigate></cellClickNavigate>
        <inheritBGColor></inheritBGColor>
        <key></key>
        <visible></visible>
        <widget></widget>
      </value>
    </property>
   </p>
*/


/** A datatype to encapsulate all the parameters required to publish a Dynamide application.  Publishing is saving the dynamic application as a static set of web pages.
 * <p>Defines the following elements:
    <ul>
    <li>caption</li>
    <li>captionMacro</li>
    <li>captionClickable</li>
    <li>cell</li>
    <li>cellMacro</li>
    <li>cellClickable</li>
    <li>cellClickNavigate</li>
    <li>inheritBGColor</li>
    <li>key</li>
    <li>visible</li>
    <li>widget</li>
    </ul>
   </p>
   <p>Sample properties element:
<pre>    &lt;property name="publishParams">
      &lt;datatype>com.dynamide.datatypes.PublishParamsDatatype&lt;/datatype>
      &lt;value>
        &lt;caption>&lt;/caption>
        &lt;captionMacro>&lt;/captionMacro>
        &lt;captionClickable>&lt;/captionClickable>
        &lt;cell>&lt;/cell>
        &lt;cellMacro>&lt;/cellMacro>
        &lt;cellClickable>&lt;/cellClickable>
        &lt;cellClickNavigate>&lt;/cellClickNavigate>
        &lt;inheritBGColor>&lt;/inheritBGColor>
        &lt;key>&lt;/key>
        &lt;visible>&lt;/visible>
        &lt;widget>&lt;/widget>
      &lt;/value>
    &lt;/property></pre>
   </p>

 */
public class ColumnDatatype extends com.dynamide.datatypes.Datatype {
    public ColumnDatatype (){
        super();
    }


    public ColumnDatatype(DynamideObject owner, Session session){
        super(owner, session);
    }

    public String getDotName(){
        String dotname;
        if (getOwner()!=null){
            dotname = getOwner().getDotName()+'.'+getAsStored("key");
        } else {
            dotname = "NO-OWNER"+'.'+getAsStored("key");
        }
        return dotname;
    }

    public void init(Element element, String ownerID){
        set("caption", JDOMFile.safeGetElementChildText(element, "caption"));
        set("captionMacro", JDOMFile.safeGetElementChildText(element, "captionMacro"));
        set("captionClickable", JDOMFile.safeGetElementChildText(element, "captionClickable"));
        set("cell", JDOMFile.safeGetElementChildText(element, "cell"));
        set("cellMacro", JDOMFile.safeGetElementChildText(element, "cellMacro"));
        set("cellClickable", JDOMFile.safeGetElementChildText(element, "cellClickable"));
        set("cellClickNavigate", JDOMFile.safeGetElementChildText(element, "cellClickNavigate"));
        set("inheritBGColor", JDOMFile.safeGetElementChildText(element, "inheritBGColor"));
        set("key", JDOMFile.safeGetElementChildText(element, "key"));
        set("visible", JDOMFile.safeGetElementChildText(element, "visible"));
        set("widget", JDOMFile.safeGetElementChildText(element, "widget"));
        Element widget = element.getChild("widget");
        if ( widget != null ) {
            set("widgetElement", JDOMFile.output(widget));
        }
    }

    public void addXMLContentTo(Element container){
        Element captionEl = new Element("caption");
        captionEl.addContent(getAsStored("caption"));
        container.addContent(captionEl);

        Element captionMacroEl = new Element("captionMacro");
        captionMacroEl.addContent(getAsStored("captionMacro"));
        container.addContent(captionMacroEl);

        Element captionClickableEl = new Element("captionClickable");
        captionClickableEl.addContent(getAsStored("captionClickable"));
        container.addContent(captionClickableEl);

        Element cellEl = new Element("cell");
        cellEl.addContent(getAsStored("cell"));
        container.addContent(cellEl);

        Element cellMacroEl = new Element("cellMacro");
        cellMacroEl.addContent(getAsStored("cellMacro"));
        container.addContent(cellMacroEl);

        Element cellClickableEl = new Element("cellClickable");
        cellClickableEl.addContent(getAsStored("cellClickable"));
        container.addContent(cellClickableEl);

        Element cellClickNavigateEl = new Element("cellClickNavigate");
        cellClickNavigateEl.addContent(getAsStored("cellClickNavigate"));
        container.addContent(cellClickNavigateEl);

        Element inheritBGColorEl = new Element("inheritBGColor");
        inheritBGColorEl.addContent(getAsStored("inheritBGColor"));
        container.addContent(inheritBGColorEl);

        Element keyEl = new Element("key");
        keyEl.addContent(getAsStored("key"));
        container.addContent(keyEl);

        Element visibleEl = new Element("visible");
        visibleEl.addContent(getAsStored("visible"));
        container.addContent(visibleEl);

        Element widgetEl = new Element("widget");
        widgetEl.addContent(getAsStored("widget"));
        container.addContent(widgetEl);

    }

    public String getCaption(){return get("caption").toString();}
    public void setCaption(String val){set("caption", val);}

    public String getCaptionMacro(){return get("captionMacro").toString();}
    public void setCaptionMacro(String val){set("captionMacro", val);}

    public String getCaptionClickable(){return get("captionClickable").toString();}
    public void setCaptionClickable(String val){set("captionClickable", val);}

    public String getCell(){return get("cell").toString();}
    public void setCell(String val){set("cell", val);}

    public String getCellMacro(){return get("cellMacro").toString();}
    public void setCellMacro(String val){set("cellMacro", val);}

    public String getCellClickable(){return get("cellClickable").toString();}
    public void setCellClickable(String val){set("cellClickable", val);}

    public String getCellClickNavigate(){return get("cellClickNavigate").toString();}
    public void setCellClickNavigate(String val){set("cellClickNavigate", val);}

    public String getInheritBGColor(){return get("inheritBGColor").toString();}
    public void setInheritBGColor(String val){set("inheritBGColor", val);}

    public String getKey(){return get("key").toString();}
    public void setKey(String val){set("key", val);}

    public String getVisible(){return get("visible").toString();}
    public void setVisible(String val){set("visible", val);}

    public String getWidget(){return get("widget").toString();}
    public void setWidget(String val){set("widget", val);}




    public String toString(){
        return "{ColumnDatatype: "
              +"caption="+getAsStored("caption")
              +"; captionMacro="+getAsStored("captionMacro")
              +"; captionClickable="+getAsStored("captionClickable")
              +"; cell="+getAsStored("cell")
              +"; cellMacro="+getAsStored("cellMacro")
              +"; cellClickable="+getAsStored("cellClickable")
              +"; cellClickNavigate="+getAsStored("cellClickNavigate")
              +"; inheritBGColor="+getAsStored("inheritBGColor")
              +"; key="+getAsStored("key")
              +"; visible="+getAsStored("visible")
              +"; widget="+getAsStored("widget")
              +"}";
    }

    public ValidationResult validate(){
        return new ValidationResult(true);//always OK
    }

    public Element getWidgetElement()
    throws Exception {
        JDOMFile jdf = new JDOMFile(null);
        Object obj = get("widgetElement");
        if (obj!=null){
            String sElement = (obj.toString());
            if ( sElement.trim().length()==0 ) {
                return null;
            }
            Element root = jdf.readFromString(sElement).getRootElement();
            return root;
        } else {
            return null;
        }
    }



}

