package com.dynamide.datatypes;

/*       WARNING                                          *
 *                                                        *
 *                                                        *
 *                                                        *
 *                                                        *
 *                                                        *
 * This file was generated by                             *
 *  /dynamide/src/shell/webmacro/generate-datatype.wm     *
 *                                                        *
 * For example:
 *  webmacro -o %DYNAMIDE_HOME%\src\java\com\dynamide\datatypes\PublishParamsDatatype.java %DYNAMIDE_HOME%\src\shell\webmacro\generate-PublishParamsDatatype.wm
 */
// IGNORING: String pagePublishOutputDir = publishOutputDir;

import org.jdom.Element;

import com.dynamide.DynamideObject;
import com.dynamide.JDOMFile;
import com.dynamide.Session;

/*  Implementation note:
    Sample properties element:
    <property name="publishParams">
      <datatype>com.dynamide.datatypes.PublishParamsDatatype</datatype>
      <value>
        <URL></URL>
        <URIPrefix></URIPrefix>
        <outputDir></outputDir>
        <protocolHostPort></protocolHostPort>
        <defaultExtension></defaultExtension>
        <publishPagesList></publishPagesList>
        <hideApplicationPath></hideApplicationPath>
        <skipResourcesCopy></skipResourcesCopy>
      </value>
    </property>
   </p>
*/


/** A datatype to encapsulate all the parameters required to publish a Dynamide application.  Publishing is saving the dynamic application as a static set of web pages.
 * <p>Defines the following elements:
    <ul>
    <li>URL</li>
    <li>URIPrefix</li>
    <li>outputDir</li>
    <li>protocolHostPort</li>
    <li>defaultExtension</li>
    <li>publishPagesList</li>
    <li>hideApplicationPath</li>
    <li>skipResourcesCopy</li>
    </ul>
   </p>
   <p>Sample properties element:
<pre>    &lt;property name="publishParams">
      &lt;datatype>com.dynamide.datatypes.PublishParamsDatatype&lt;/datatype>
      &lt;value>
        &lt;URL>&lt;/URL>
        &lt;URIPrefix>&lt;/URIPrefix>
        &lt;outputDir>&lt;/outputDir>
        &lt;protocolHostPort>&lt;/protocolHostPort>
        &lt;defaultExtension>&lt;/defaultExtension>
        &lt;publishPagesList>&lt;/publishPagesList>
        &lt;hideApplicationPath>&lt;/hideApplicationPath>
        &lt;skipResourcesCopy>&lt;/skipResourcesCopy>
      &lt;/value>
    &lt;/property></pre>
   </p>

 */
public class PublishParamsDatatype extends com.dynamide.datatypes.Datatype {
    public PublishParamsDatatype (){
        super();
        //System.out.println("PublishParamsDatatype constructor");
    }


    public PublishParamsDatatype(DynamideObject owner, Session session){
        super(owner, session);
        //System.out.println("PublishParamsDatatype constructor(owner,session)");
    }
    public void init(Element element, String ownerID){
        set("URL", JDOMFile.safeGetElementChildText(element, "URL"));
        set("URIPrefix", JDOMFile.safeGetElementChildText(element, "URIPrefix"));
        set("outputDir", JDOMFile.safeGetElementChildText(element, "outputDir"));
        set("protocolHostPort", JDOMFile.safeGetElementChildText(element, "protocolHostPort"));
        set("defaultExtension", JDOMFile.safeGetElementChildText(element, "defaultExtension"));
        set("publishPagesList", JDOMFile.safeGetElementChildText(element, "publishPagesList"));
        set("hideApplicationPath", JDOMFile.safeGetElementChildText(element, "hideApplicationPath"));
        set("skipResourcesCopy", JDOMFile.safeGetElementChildText(element, "skipResourcesCopy"));
        //System.out.println("PublishParamsDatatype.init: "+toString());
    }

    public void addXMLContentTo(Element container){
        Element URLEl = new Element("URL");
        URLEl.addContent(getAsStored("URL"));
        container.addContent(URLEl);

        Element URIPrefixEl = new Element("URIPrefix");
        URIPrefixEl.addContent(getAsStored("URIPrefix"));
        container.addContent(URIPrefixEl);

        Element outputDirEl = new Element("outputDir");
        outputDirEl.addContent(getAsStored("outputDir"));
        container.addContent(outputDirEl);

        Element protocolHostPortEl = new Element("protocolHostPort");
        protocolHostPortEl.addContent(getAsStored("protocolHostPort"));
        container.addContent(protocolHostPortEl);

        Element defaultExtensionEl = new Element("defaultExtension");
        defaultExtensionEl.addContent(getAsStored("defaultExtension"));
        container.addContent(defaultExtensionEl);

        Element publishPagesListEl = new Element("publishPagesList");
        publishPagesListEl.addContent(getAsStored("publishPagesList"));
        container.addContent(publishPagesListEl);

        Element hideApplicationPathEl = new Element("hideApplicationPath");
        hideApplicationPathEl.addContent(getAsStored("hideApplicationPath"));
        container.addContent(hideApplicationPathEl);

        Element skipResourcesCopyEl = new Element("skipResourcesCopy");
        skipResourcesCopyEl.addContent(getAsStored("skipResourcesCopy"));
        container.addContent(skipResourcesCopyEl);

    }

    public String getURL(){return get("URL").toString();}
    public void setURL(String val){set("URL", val);}

    public String getURIPrefix(){return get("URIPrefix").toString();}
    public void setURIPrefix(String val){set("URIPrefix", val);}

    public String getOutputDir(){return get("outputDir").toString();}
    public void setOutputDir(String val){set("outputDir", val);}

    public String getProtocolHostPort(){return get("protocolHostPort").toString();}
    public void setProtocolHostPort(String val){set("protocolHostPort", val);}

    public String getDefaultExtension(){return get("defaultExtension").toString();}
    public void setDefaultExtension(String val){set("defaultExtension", val);}

    public String getPublishPagesList(){return get("publishPagesList").toString();}
    public void setPublishPagesList(String val){set("publishPagesList", val);}

    public String getHideApplicationPath(){return get("hideApplicationPath").toString();}
    public void setHideApplicationPath(String val){set("hideApplicationPath", val);}

    public String getSkipResourcesCopy(){return get("skipResourcesCopy").toString();}
    public void setSkipResourcesCopy(String val){set("skipResourcesCopy", val);}


    public String toString(){
        return "{PublishParamsDatatype: "
              +"URL="+getAsStored("URL")
              +"; URIPrefix="+getAsStored("URIPrefix")
              +"; outputDir="+getAsStored("outputDir")
              +"; protocolHostPort="+getAsStored("protocolHostPort")
              +"; defaultExtension="+getAsStored("defaultExtension")
              +"; publishPagesList="+getAsStored("publishPagesList")
              +"; hideApplicationPath="+getAsStored("hideApplicationPath")
              +"; skipResourcesCopy="+getAsStored("skipResourcesCopy")
              +"}";
    }

    public ValidationResult validate(){
        return new ValidationResult(true);//always OK
    }

}
