<?xml version="1.0"?>
<!DOCTYPE dynamideForm>
<!-- Copyright (c) 2001, 2002 DYNAMIDE.COM -->

<dynamideForm>

<properties>
    <property name="name"><value>serversideeventdesigner1</value></property>
    <property name="type"><value>designers/com.dynamide.datatypes.ServerSideEvent.designer</value></property>
</properties>

<event language="beanshell" name="onAction"><![CDATA[
    session.printStdOut(" server side event onAction:  "+event.action);
    Page p = event.sender;
    Designer designer = p.getObject();
    designer.onAction(event);
    
    if ( event.action.equals("saveServerSideEvent") ) {
        designer.setDone(true);
        String source = event.getQueryParam("source");
        session.printStdOut(" server side event source: "+source);
        Property p = designer.getTargetProperty();
        o = p.getValueObjectNoDefault();
        o.set("value", source);        
    }
]]></event>

<htmlsrc><![CDATA[
<html>
<HEAD>
  <title>ServerSideEvent designer</title>
  $session.getInclude("resources/css/ide.css")
  $session.getInclude("resources/js/scripts.js")
  $session.getInclude("resources/js/msdom.js")
  $session.getInclude("resources/js/windowing.js")
</HEAD>
<body topmargin='0' leftmargin='4'  marginwidth="4" marginheight="4" bgColor="$page.bgcolor">
<FORM action="$session.applicationPath" method="get" encType="application/x-www-form-urlencoded">

          
          
          
#set $designer = $page.getObject()
$session.printStdOut("======= rendering page ====== $designer")

#comment {
   Designer:
    id:designer_page1_page1_onAction
    targetPath:page1.page1
    targetOwnerID:page1
    targetID:page1
    propertyName:onAction
    index:
    targetDatatype:page1_onAction
    target:
}

    ## This template relies on the Property Designer window initializing a bunch
    ## of things in the context, placed in the "designer" object. See the full list in:
    ##   {webapp}/com/dynamide/sites/dynamide/apps/ide/designertop.xml

    #set $thing = $designer.getTarget()
    #if ($designer.getTargetClass() == "Widget"){
        ## Magic trick: the Widget doesn't save it's events, the page saves them.
        #set $thing = $designer.getTargetPage()
    }
    #set $newEventName = "$designer.getTargetID()\_$designer.getPropertyName()"

    ##  These two methods are like-named, but run against different classes: Session, Page, and Widget.
    ##  However, Webmacro uses introspection, not interfaces or inheritance.
    #set $source = $thing.getEventSourceBody($newEventName).source
    #set $signature = $thing.getEventSignature($newEventName)

    ## 4/15/2003 8:04PM These two lines encode > into &gt; which messes up java source.
    ##set $source = $session.getStringTools().escape($source)
    ##set $source = $session.getStringTools().escapeAmpersands($source)

    <table border="1" cellpadding='3' cellspacing='0'>
        <tr>
            <td align='left' valign='bottom' colspan='2'>
                <span class="eventTitle"><b><nobr>$signature</nobr></b></span>
                <span class='dynamideRawOutput'>$session.getFieldValue("propertyDesigner_SubmitButton")</span>
            </td>
        </tr>
        <tr>
            <td colspan='2'>
                <textarea cols="110" rows="50" id="source" name="source" value="" class="codewindow">$source</textarea>
            </td>
        </tr>
    </table>
    <SCRIPT LANGUAGE="JavaScript">
    <!--
        document.all.source.focus();
    //-->
    </SCRIPT>
<span class="widget" id="submit1" />  
## This is a SUBMIT button, so this form goes to back end, the response comes back as #showRedirect
##   which then calls pickit() and window.close().

<input type="hidden" name="page" value="$pageID" />
<input type="hidden" name="SESSIONID" value="$SESSIONID" />
</FORM>
</body>
</html>
]]></htmlsrc>

<widgets>
    <widget id="submit1">
      <properties>
        <property name="action">
          <value>validateDesigner</value>
        </property>
        <property name="class">
          <value>dmbutton</value>
        </property>
        <property name="caption">
          <value>OK</value>
        </property>
        <property name="type">
          <value>com.dynamide.submit</value>
        </property>
      </properties>
    </widget>
</widgets>

</dynamideForm>