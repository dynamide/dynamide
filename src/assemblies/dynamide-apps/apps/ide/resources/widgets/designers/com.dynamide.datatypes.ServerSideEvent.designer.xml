<?xml version="1.0"?>
<!DOCTYPE dynamideForm>
<!-- Copyright (c) 2001, 2002 DYNAMIDE.COM -->

<dynamideForm>

<properties>
    <property name="name"><value>serversideeventdesigner1</value></property>
    <property name="type"><value>com.dynamide.container</value></property>
</properties>

<htmlsrc><![CDATA[
<span>
<span>
    ## This template relies on the Property Designer window initializing a bunch
    ## of things in the context. See the full list in:
    ##   {webapp}/com/dynamide/sites/dynamide/apps/ide/designertop.xml

    #set $thing = $target
    #if ($targetClass == "Widget"){
        ## Magic trick: the Widget doesn't save it's events, the page saves them.
        #set $thing = $targetPage
    }
    #set $newEventName = "$targetID\_$propertyName"

    ##  These two methods are like-named, but run against different classes: Session, Page, and Widget.
    ##  However, Webmacro uses introspection, not interfaces or inheritance.
    #set $source = $thing.getEventSourceBody($newEventName).source
    #set $signature = $thing.getEventSignature($newEventName)

    ## 4/15/2003 8:04PM These two lines encode > into &gt; which messes up java source.
    ##set $source = $session.getStringTools().escape($source)
    ##set $source = $session.getStringTools().escapeAmpersands($source)

    <table border="1" cellpadding='3' cellspacing='0'>
        <tr>
            <td align='left' valign='bottom' colspan='2'>
                <span class="eventTitle"><b><nobr>$signature</nobr></b></span>
                <span class='dynamideRawOutput'>$session.getFieldValue("propertyDesigner_SubmitButton")</span>
            </td>
        </tr>
        <tr>
            <td colspan='2'>
                <textarea cols="110" rows="50" id="source" name="source" value="" class="codewindow">$source</textarea>
            </td>
        </tr>
    </table>
    <SCRIPT LANGUAGE="JavaScript">
    <!--
        document.all.source.focus();
    //-->
    </SCRIPT>
</span>
</span>
]]></htmlsrc>

<widgets>
</widgets>

</dynamideForm>