#There is an updated version of this file in 
#  ${DYNAMIDE_HOME}/dynamide.local.properties
#
#  This is the only file you need to modify to build Dynamide.
#  This file should be copied from
#    ${DYNAMIDE_HOME}/bin/dynamide.local.properties.template
#  to
#    ${DYNAMIDE_HOME}/dynamide.local.properties
#  and then you make local configuration changes.
#  When you upgrade dynamide in place, this file will not be overwritten.
#  When you upgrade dynamide by installing in another directory, copy this file over.

#  DO NOT modify build.xml, it will pull in this file.
#  Similarly, do not modify bin/.dynamide.local.sh, as it is generated by Ant
#  during the target "install-bin".
#  Last definition wins, but parameters defined on command line with -D win over everything.

#  HOWEVER :
#     When dynamide is installed with "ant install" or "ant install-bin"
#     it copies files to the home directory of the user performing the installation.
#     The usual method is to su to user "dynamide" in group "dynamide", of which user "resin" is a member also.
#     Then the "dynamide" user would perform the installation.
#     So... these files will end up in ~dynamide/
#          ~dynamide/.dynamide.local.sh
#          ~dynamide/dynamide.local.properties
#     Once these files are copied, they will not be subsequently overwritten by Dynamide.
#     So you can save local configuration there.
#     This works on Windows NT/2000 as well, although you may wish to do this as your own user ID,
#     in which case files may end up somewhere like
#         C:\Documents and Settings\myname\

#  In this file, you should use forward slashes for Unix, and escape windows slashes on Windows.
#  For example, these all work on the following platforms:
#  Windows:
#       C:\\dynamide
#  Unix:
#       /usr/local/dynamide
#
#  Even though Ant allows it, do NOT do this: C:/dynamide in this file, though you can do it on the command line.

#  The entry to this file is the fact that DYNAMIDE_HOME points to this directory.
#  To get Dynamide to work, you must define DYNAMIDE_HOME in your environment.
#  You could override this with "ant -DDYNAMIDE_HOME=C:/foo" if C:\foo were the directory
#     containing this file (the local version, dynamide.local.properties, not dynamide.local.properties.template).

##  Set up all the _HOME directories:
##  You must have these values defined, so uncomment and modify one set.

##### Windows EXAMPLE:      ##################
# DYNAMIDE_LOGS=C:\\bin\\dynamide-logs
# JAVA_HOME=C:\\bin\\jdk141

##### RedHad Linux EXAMPLE: ##################
# DYNAMIDE_LOGS=/export/logs/dynamide
# JAVA_HOME=/usr/java/j2sdk1.4.1_03

##### MacOS X EXAMPLE: ##################
# DYNAMIDE_LOGS=/Users/laramie/tmp/dynamide-logs
# JAVA_HOME=/Library/Java/Home

#  The default is to put the RESOURCE_ROOT under the dynamide installation.
#  If you want it in some other place, define that here, otherwise this value works.
#  You could, for example, mount the DYNAMIDE_RESOURCE_ROOT somewhere else so that when
#  changing major versions of dynamide, you kept your resources intact.
#  Normally, you would upgrade dynamide by installing the new jar files
#  and the new assemblies, thus not modifying the rest of the installation tree,
#  so a custom DYNAMIDE_RESOURCE_ROOT is not necessary.

DYNAMIDE_RESOURCE_ROOT=${DYNAMIDE_HOME}/build/ROOT

#  This file is written from the "ant install-bin" target,
#  so you should NOT need to change the value here:

DYNAMIDE_RESIN_CONF=${DYNAMIDE_RESOURCE_ROOT}/conf/resin.dynamide.conf

#   Many settings are controlled by the main context.xml configuration file.  This file 
#   can be given an arbitrary name, but ships as ${DYNAMIDE_RESOURCE_ROOT}/conf/context.xml
#   Other (application-specific) context files are read automatically from each home directory, 
#   and must be named context.xml.
#   If you install a new resource root, by upgrading Dynamide, for example, your file will
#   be in the wrong place.  So you can keep local configuration anywhere else, for
#   example:
#        DYNAMIDE_CONTEXT_CONF=/etc/dynamide-context.xml
#   would put the file in /etc/ so that changes to context values such as "/conf/email-server"
#   are persistent across upgrades.

# for example, uncomment this to place the file in /etc with a more unique name: 
# DYNAMIDE_CONTEXT_CONF=/etc/dynamide-context.xml
#
# Here is the default value:
DYNAMIDE_CONTEXT_CONF=${DYNAMIDE_RESOURCE_ROOT}/conf/context.xml


#  This value must be kept in sync with the value that the com.dynamide.resource.ResourceManager uses,
#   it does NOT look this value up. This value is used by Ant to push the static content,
#   and to tell RESIN where to find it.

DYNAMIDE_STATIC_ROOT=${DYNAMIDE_RESOURCE_ROOT}/static

#  This is only needed if you are developing Dynamide, and wish to install non-source
#   versions on your system, *outside* of the current DYNAMIDE_HOME.
#Uncomment this for it to work:
#DYNAMIDE_DIST_BASE=/usr/local

fileversion=2011-05-16
